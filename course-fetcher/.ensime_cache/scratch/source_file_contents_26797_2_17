package course_fetcher

import scalaj.http._
import CourseFetcherData._

object CourseFetcher extends App {
  val baseRequest: HttpRequest =
  Http("http://webs.hufs.ac.kr:8989/src08/jsp/lecture/LECTURE2020L.jsp")
    .postForm

  val majorCourseRaw: Map[String, String] = (for {
    c <- majorCourseCategory
  } yield (c._2 -> baseRequest.params(majorFetchParams + ("ag_crs_strct_cd" -> c._1)).asString.body))

  val liberalArtsCourseRaw = (for {
    c <- liberalArtsCourseCategory
  } yield (c._2 -> baseRequest.params(liberalArtsFetchParams + ("ag_compt_fld_cd" -> c._1)).asString.body))

  val majorCourses = majorCourseRaw.map {
    raw => courseRegex
      .findAllMatchIn(raw._2)
      .map(m => m.subgroups.map(x => Option(x)))
  }

//  val courseInfo = for (m <- courseRegex findAllMatchIn body) yield (matchGroupNames zip m.subgroups.map(x => Option(x))).toMap

//  println(majorCourseRaw)
//  println(liberalArtsCourseRaw)
}
