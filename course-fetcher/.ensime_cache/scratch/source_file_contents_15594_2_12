package course_fetcher

import scalaj.http._

object CourseFetcherD extends App {
  val baseRequest: HttpRequest =
  Http("http://webs.hufs.ac.kr:8989/src08/jsp/lecture/LECTURE2020L.jsp")
    .postForm
    .params(Map(
      "tab_lang" -> "K",
      "type" -> "",
      "ag_ledg_year" -> "2017",
      "ag_ledg_sessn" -> "1",
      "ag_org_sect" -> "A",
      "campus_sect" -> "H1",
      "gubun" -> "2", //"1",
      "ag_crs_strct_cd" -> "AAR01_H1", //
      "ag_compt_fld_cd" -> "302_H1" //
    ))

  //gubun 1
  //"ag_crs_strct_cd"
  val majorCourses = Map("AAR01_H1" -> "(서울) - CORE글로벌지역학 (CORE Global Studies)", "A1CE1_H1" -> "(서울) - EICC학과 (Department of English for International Conferences and Communication)", "AAQ01_H1" -> "(서울) - EU전공 (EU  Major)", "AKAA1_H1" -> "(서울) - Language & Diplomacy전공 (Language & Diplomacy)", "AKA_H1" -> "(서울) - Language & Diplomacy학부 (Division of Language & Diplomacy)", "A2AA1_H1" -> "(서울) - Language & Trade전공 (Language & Trade)", "A2A_H1" -> "(서울) - Language & Trade학부 (Division of Language & Trade)", "ALA_H1" -> "(서울) - 경영학부 (Business Administration Division)", "ALAA1_H1" -> "(서울) - 경영학전공 (Business Administration)", "AEC_H1" -> "(서울) - 경제학부 (Division of Economics)", "AECA1_H1" -> "(서울) - 경제학전공 (Economics)", "ACDD1_H1" -> "(서울) - 광고·PR·브랜딩전공 (Advertising·Public Relations·Branding)", "AFF01_H1" -> "(서울) - 교육학 (Education)", "ACAI1_H1" -> "(서울) - 국가리더전공 (National Leader)", "AEAA1_H1" -> "(서울) - 국제통상학과 (Department of International  Economics and Law)", "AGA_H1" -> "(서울) - 국제학부 (Division of International Studies)", "AGAA1_H1" -> "(서울) - 국제학전공 (International Studies)", "AAH01_H1" -> "(서울) - 네덜란드어과 (Department of Dutch)", "AAD01_H1" -> "(서울) - 노어과 (Department of Russian)", "AAC01_H1" -> "(서울) - 독일어과 (Department of German)", "AFC01_H1" -> "(서울) - 독일어교육과 (Department of German Education)", "ABP01_H1" -> "(서울) - 동북아전공 (North-East Asian Studies Major)", "ANJA1_H1" -> "(서울) - 디지털인문한국학전공 (Digital Korean Studies in Humanities)", "ABC01_H1" -> "(서울) - 말레이.인도네시아어과 (Department of Malay-Indonesian)", "ABJ01_H1" -> "(서울) - 몽골어과 (Department  of Mongolian)", "ANDD2_H1" -> "(서울) - 문화콘텐츠학전공 (Cultural Contents Major)", "ACD_H1" -> "(서울) - 미디어커뮤니케이션학부 (Division of Media & Communication)", "ACDE1_H1" -> "(서울) - 방송·영상·뉴미디어전공 (Broadcasting·Film·New Media)", "ADA01_H1" -> "(서울) - 법학과 (Department of Law)", "ABF01_H1" -> "(서울) - 베트남어과 (Department of Vietnamese)", "AAP01_H1" -> "(서울) - 브릭스전공 (BRICs Major)", "ANDB2_H1" -> "(서울) - 사학과 (Department of History)", "AKAB1_H1" -> "(서울) - 사회과학전공 (Social Science)", "AANA1_H1" -> "(서울) - 세계문화예술경영전공 (Art and Cultural Mediation)", "AAI01_H1" -> "(서울) - 스칸디나비아어과 (Department of Scandinavian Languages)", "AAE01_H1" -> "(서울) - 스페인어과 (Department of Spanish)", "ABD01_H1" -> "(서울) - 아랍어과 (Department of Arabic)", "ACDA1_H1" -> "(서울) - 언론·정보전공 (Journalism & Information)", "A1CF1_H1" -> "(서울) - 언어와공학전공 (Language and Technology)", "ANDC2_H1" -> "(서울) - 언어인지과학과 (Department of Linguistics and Cognitive Science)", "A1CD1_H1" -> "(서울) - 영미문학·문화학과 (Department of English Literature and Culture)", "AFA01_H1" -> "(서울) - 영어교육과 (Department of English Education)", "A1BD1_H1" -> "(서울) - 영어전공 (English Major)", "A1CA1_H1" -> "(서울) - 영어학과 (Department of English Linguistics)", "AFH01_H1" -> "(서울) - 외국어로서의한국어교육전공 (Teaching Korean as a Foreign Language)", "ATMB2_H1" -> "(서울) - 융복합소프트웨어전공 (Software Convergence Major)", "AJDA1_H1" -> "(서울) - 융합일본지역전공 (Integrated Japanese Studies)", "AJD_H1" -> "(서울) - 융합일본지역학부 (Division of Integrated Japanese Studies)", "ABI01_H1" -> "(서울) - 이란어과 (Department of Persian)", "AAF01_H1" -> "(서울) - 이탈리아어과 (Department of Italian)", "ABG01_H1" -> "(서울) - 인도어과 (Department of Hindi)", "AJCA1_H1" -> "(서울) - 일본언어문화전공 (Japanese Language, Literature and Culture)", "AJC_H1" -> "(서울) - 일본언어문화학부 (Division of Japanese Language, Literature and Culture)", "ACBA1_H1" -> "(서울) - 정치외교학과 (Department of Political Science and Diplomacy)", "AFI01_H1" -> "(서울) - 중국어교육과 (Department of Chinese Education)", "AICA1_H1" -> "(서울) - 중국언어문화전공 (Chinese Language, Literature and Culture)", "AIC_H1" -> "(서울) - 중국언어문화학부 (Division of Chinese Language, Literature and Culture)", "AIDA1_H1" -> "(서울) - 중국외교통상전공 (Chinese Foreign Affairs and Commerce)", "AID_H1" -> "(서울) - 중국외교통상학부 (Division of Chinese Foreign Affairs and Commerce)", "ANDA2_H1" -> "(서울) - 철학과 (Department of Philosophy)", "ABE01_H1" -> "(서울) - 태국어과 (Department of Thai)", "ABH11_H1" -> "(서울) - 터키.아제르바이잔어과 (Department of Turkish and Azerbaijani)", "AAK01_H1" -> "(서울) - 포르투갈어과 (Department of Portuguese)", "AAB01_H1" -> "(서울) - 프랑스어과 (Department of French)", "AFB01_H1" -> "(서울) - 프랑스어교육과 (Department of French Education)", "AAM_H1" -> "(서울) - 프랑스어학부 (Division of French Language)", "AFD01_H1" -> "(서울) - 한국어교육과 (Department of Korean Education)", "ACBB1_H1" -> "(서울) - 행정학과 (Department of Public Administration)")

  //gubun = 2
  //"ag_compt_fld_cd" -> "302_H1"
  val liberalArtsCourses = Map("301_H1" -> "인문강좌(서울)", "302_H1" -> "교양외국어(서울)", "303_H1" -> "신입생세미나(서울)", "304_H1" -> "HUFS CAREER(서울)", "320_H1" -> "학습포트폴리오(서울)", "327_H1" -> "건강과레포츠(서울)", "328_H1" -> "특별교양(서울)", "32A_H1" -> "실용외국어(선택)(서울)", "32V_H1" -> "외국인을 위한 한국학(서울)", "32Z_H1" -> "공동교양(한예종)(서울)", "330_H1" -> "언어와문학(서울)", "331_H1" -> "문화와예술(서울)", "332_H1" -> "역사와철학(서울)", "333_H1" -> "국가와사회(서울)", "334_H1" -> "과학과기술(서울)", "335_H1" -> "핵심인문기초(서울)", "61_H1" -> "군사학(서울)")

  val body = baseRequest.asString.body

  val courseRegex = """<td>(.*)<\/td>\s*<td>(\d)<\/td>\s*<td>([A-Z]\d{5}[A-Z0-9]\d{2})<\/td>\s*<td align="left">\s*<!--.*-->\s*<div\s*.*\s*.\s*<font class="txt_navy">(.*)<\/font><br>\s*(?:<font class=['"]txt_gray8['"]>\((.*)\)<\/font>\s*)?<\/div>\s*<\/td>\s*<td>\s*.*\s*.*\s*<\/td>\s*(?:<td>.*<\/td>\s*){4}<td align="left">(.*)\s*(?:<br>\s*<font class="txt_gray8">\((.*)\)<\/font>)?\s*<\/td>\s*<td>(\d)<\/td>\s*<td>(\d)<\/td>\s*<td align="left">.*<br><font class="txt_gray8">\((?:([A-Z][a-z]{2}) (\d{1,2}) (\d{1,2})? ?(\d{1,2})? ?(?:\(((?:[C0-9]\d{3,4}(?:-1)?)|(?:B[12]-\d{2})|(?:사이버관 대강당))\)? ?)?)(?:([A-Z][a-z]{2}) (\d{1,2}) (\d{1,2})? ?(\d{1,2})? ?(?:\(((?:[C0-9]\d{3,4}(?:-1)?)|(?:B[12]-\d{2})|(?:사이버관 대강당))\)? ?)?)?(?:([A-Z][a-z]{2}) (\d{1,2}) (\d{1,2})? ?(\d{1,2})? ?(?:\(((?:[C0-9]\d{3,4}(?:-1)?)|(?:B[12]-\d{2})|(?:사이버관 대강당))\)? ?)?)?\)<\/font><\/td>\s*<td>(\d{1,})&nbsp;\/&nbsp;(\d{1,})<\/td>\s*<td align="left">(.*)<br>""".r

  val embeddedCourses = courseRegex.unanchored

  val matchGroupNames = Vector(
    "courseType", "courseYear", "courseNo", "courseNameMain", "courseNameAdditional", "professorNameMain", "professorNameAdditional", "creditHours", "courseHours",
    "dayOfWeek1", "time11", "time12", "time13", "classroom1", "dayOfWeek2", "time21", "time22", "time23", "classroom2", "dayOfWeek3", "time31", "time32", "time33", "classroom3", "currentlyEnrolled", "maximumEnrolled", "note"
  )
  val courseInfo = for (m <- courseRegex findAllMatchIn body) yield (matchGroupNames zip m.subgroups.map(x => Option(x))).toMap

  println(courseInfo.toVector)
}

//request parameters:
/*
"ag_ledg_year""
("2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999")

"ag_ledg_sessn"
("1" -> 1st Semester,
"2" -> Summer Session,
"3" -> 2nd Semester,
"4" -> Winter Session)

"ag_org_sect"
("A" -> "학부 (Undergraduate)",
"B" -> "대학원 (Graduate School)",
"D" -> "통번역대학원 (Graduate School of Interpretation and Translation)",
"E" -> "교육대학원 (Graduate School of Education)",
"G" -> "정치행정언론대학원 (Graduate School of Politics, Government, and Communication)",
"H" -> "국제지역대학원 (Graduate School of International and Area Studies)",
"I" -> "경영대학원(주간) (Graduate School of Business)",
"J" -> "경영대학원(야간) (Graduate School of Business)",
"L" -> "법학전문대학원 (Law School)",
n"M" -> "TESOL대학원 (Graduate School of TESOL)",
"T" -> "TESOL 전문교육원 (TESOL Professional Education Center)")

"campus_sect"
("H1", "H2") //서울 글로벌
 */
